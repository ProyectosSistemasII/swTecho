<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	x:Class="TechoCeiva.UC_Insumo"
	x:Name="UserControl"
	d:DesignWidth="640" Width="1123.501" Height="577">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Simple Styles.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<!-- Etiqueta simple: esta plantilla es simplemente un ContentPresenter que muestra el contenido de la etiqueta -->
			<Style x:Key="SimpleLabel" TargetType="{x:Type Label}">
				<Setter Property="HorizontalContentAlignment" Value="Left"/>
				<Setter Property="VerticalContentAlignment" Value="Top"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Label}">
							<Grid>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
	
			<!-- SimpleButtonFocusVisual se usa para mostrar el foco del teclado alrededor de un control SimpleButton -->
			<Style x:Key="SimpleButtonFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Border>
								<Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
	
			<!-- NormalBrush se usa como fondo para SimpleButton y SimpleRepeatButton -->
			<LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
				<GradientStop Color="#EEE" Offset="0.0"/>
				<GradientStop Color="#CCC" Offset="1.0"/>
			</LinearGradientBrush>
			<LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
				<GradientStop Color="#CCC" Offset="0.0"/>
				<GradientStop Color="#444" Offset="1.0"/>
			</LinearGradientBrush>
	
			<!-- DefaultedBorderBrush se usa para mostrar KeyBoardFocus -->
			<LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
				<GradientStop Color="#777" Offset="0.0"/>
				<GradientStop Color="#000" Offset="1.0"/>
			</LinearGradientBrush>

			<!-- PressedBrush se usa para Pressed en Button, Radio Button y CheckBox -->
			<LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
				<GradientStop Color="#BBB" Offset="0.0"/>
				<GradientStop Color="#EEE" Offset="0.1"/>
				<GradientStop Color="#EEE" Offset="0.9"/>
				<GradientStop Color="#FFF" Offset="1.0"/>
			</LinearGradientBrush>
			<LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
				<GradientStop Color="#444" Offset="0.0"/>
				<GradientStop Color="#888" Offset="1.0"/>
			</LinearGradientBrush>

			<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
			<SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA"/>

			<!-- Los pinceles deshabilitados se usan para el aspecto de los controles cuando están deshabilitados -->
			<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
			<!-- Button simple: este control establece pinceles en cada estado. Tenga en cuenta que estos pinceles deben aparecer en la lista de arriba, ya que son recursos estáticos -->
			<Style x:Key="SimpleButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
				<Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
				<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
					
							<!-- Grid se usa como raíz porque resulta sencillo agregarle más elementos para personalizar el botón -->
							<Grid x:Name="Grid">
								<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
						
								<!-- Content Presenter es donde el control coloca el contenido de texto, etc. -->
								<!-- Los enlaces sirven para que el control se pueda parametrizar sin editar la plantilla -->
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
							</Grid>
					
							<!--Cada estado establece un pincel en el elemento Border de la plantilla -->
							<ControlTemplate.Triggers>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" TargetName="Border"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Background" TargetName="Border" Value="#FF0092DD"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border"/>
									<Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="true"/>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
									<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
									<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
	
		</ResourceDictionary>
	
	</UserControl.Resources>
	<Grid x:Name="LayoutRoot">
		<Label x:Name="lblTitle" Content="Gestión de Insumos" Style="{DynamicResource SimpleLabel}" Foreground="#FF626465" FontSize="26.667" Margin="23,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
		<Button x:Name="btnModificar" Content="Modificar" HorizontalAlignment="Left" Margin="288.2,17.47,0,0" Style="{DynamicResource SimpleButton}" VerticalAlignment="Top" Width="109" Height="26" BorderBrush="{x:Null}" Background="#FF0092DD" Foreground="White" Click="btnModificar_Click" />
		<Canvas x:Name="canvasContent" Margin="0,43.47,0,0"/>
	</Grid>
</UserControl>