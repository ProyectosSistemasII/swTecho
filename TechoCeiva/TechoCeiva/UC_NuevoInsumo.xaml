<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	mc:Ignorable="d"
	x:Class="TechoCeiva.UC_NuevoInsumo"
	x:Name="UserControl"
	d:DesignWidth="640" d:DesignHeight="480" Width="1123" Height="577">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Simple Styles.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="ButtonFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
				<GradientStop Color="#F3F3F3" Offset="0"/>
				<GradientStop Color="#EBEBEB" Offset="0.5"/>
				<GradientStop Color="#DDDDDD" Offset="0.5"/>
				<GradientStop Color="#CDCDCD" Offset="1"/>
			</LinearGradientBrush>
			<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
			<Style x:Key="btnDiseñoAñadir" TargetType="{x:Type Button}">
				<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
				<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
				<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Microsoft_Windows_Themes:ButtonChrome>
							<ControlTemplate.Triggers>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
								</Trigger>
								<Trigger Property="ToggleButton.IsChecked" Value="true">
									<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True"/>
										<Condition Property="IsCancel" Value="False"/>
									</MultiTrigger.Conditions>
									<Setter
							Property="Foreground" Value="#ADADAD"/>
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnDiseñoPlus" TargetType="{x:Type Button}" BasedOn="{x:Null}">
				<Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
				<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
					
					<!-- Grid se usa como raíz porque resulta sencillo agregarle más elementos para personalizar el botón -->
							<Grid x:Name="Grid">
								<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
						
								<!-- Content Presenter es donde el control coloca el contenido de texto, etc. -->
						<!-- Los enlaces sirven para que el control se pueda parametrizar sin editar la plantilla -->
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
								<Border x:Name="border" BorderBrush="{x:Null}" BorderThickness="1" HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto"/>
							</Grid>
					
					<!--Cada estado establece un pincel en el elemento Border de la plantilla -->
							<ControlTemplate.Triggers>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter Property="BorderBrush" TargetName="Border" Value="{x:Null}"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="true">
									<Setter Property="Background" TargetName="Border" Value="{x:Null}"/>
									<Setter Property="BorderBrush" TargetName="border" Value="#FF0092DD"/>
									<Setter Property="Background" TargetName="border">
										<Setter.Value>
											<ImageBrush ImageSource="add.png" Stretch="Uniform"/>
										</Setter.Value>
									</Setter>
								</Trigger>
								<Trigger Property="IsPressed" Value="true">
									<Setter Property="Background" TargetName="Border" Value="{x:Null}"/>
									<Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
									<Setter Property="BorderBrush" TargetName="Border" Value="{x:Null}"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="true"/>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
									<Setter Property="BorderBrush" TargetName="Border" Value="{x:Null}"/>
									<Setter Property="Background" TargetName="Border" Value="{x:Null}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>

	<Grid x:Name="LayoutRoot">
		<Label x:Name="lblInsumos" Content="Insumos" HorizontalAlignment="Left" Margin="23,8,0,0" Style="{DynamicResource SimpleLabel}" VerticalAlignment="Top" FontSize="26.667"/>
        <DataGrid x:Name="dgInsumos" AlternatingRowBackground="#FFE7E6E6" IsReadOnly="True" AutoGenerateColumns="False" HorizontalGridLinesBrush="#FFCCC9C9" VerticalGridLinesBrush="#FFCCC9C9" RenderTransformOrigin="0,0" FontSize="14.667" Background="White" Foreground="#FF333333" Margin="23,68,457,47" MouseDoubleClick="dgInsumos_MouseDoubleClick">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Nombre}" Header="Nombre" Width="140" />
                <DataGridTextColumn Binding="{Binding Presentacion}" Header="Presentacion" Width="120" />
                <DataGridTextColumn Header="Existencias" Binding="{Binding Existencia}" Width="120" />
                <DataGridTextColumn Binding="{Binding Rango}" Header="Caducidad" Width="180" />
                <DataGridTextColumn Binding="{Binding AnioCaducidad}" Header="Año" Width="62" />
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="btnMas" Content="" HorizontalAlignment="Left" Margin="287,23.47,0,0" Style="{DynamicResource btnDiseñoPlus}" VerticalAlignment="Top" FontSize="14.667" Width="30" Height="20" Foreground="{x:Null}" BorderBrush="{x:Null}" Click="btnMas_Click" >
        	<Button.Background>
        		<ImageBrush ImageSource="add.png" Stretch="Uniform"/>
        	</Button.Background>
        </Button>
	</Grid>
</UserControl>